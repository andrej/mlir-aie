-- single core -- 

M=2048 K=2048 N=2048 m=64 k=64 n=64 dtype_in=i16 dtype_out=i16 trace_size=65536 runargs="--iters 100 --warmup 10 --verify 0 --trace_sz 65536" make run

data movement + outer loop locks + zeroing + matmul: 158828 us    trc_normal.json         commit 9262fe4a
data movement + outer loop locks + zeroing:          123089 us    trc_zero.json           commit f6ec59bd
data movement + outer loop locks:                    121085 us    trc_datamovement.json   commit 7878c991
data movement w/o mem->core transf. + outer loop locks:   121025 us                            commit 1dc4d7cb
data movement w/o ANY transf. + outer loop locks:          70327 us                            commit 966619e7
outer loop locks:                                      3135 us    trc_preamble.json       commit 34639d97
outer loop locks + compute on buffer:                152095 us    trace_compute.json      commit 4fcf8ff4
outer loop locks + compute + zero on buffer:         152543 us    trc_compute_zero.json   commit 8fadbd66


conclusions:

compute:

outer loop locks:                                 3135 us
zeroing:             152543 us - 152095 us     =     448 us
compute:             152095 us - 3135 us       =  148960 us

total of above numbers:                           152543 us
actual total:                                     158828 us
unaccounted for:                                    6285 us

data movement:
data movement wo/transf. or outer loop locks:   70327 us - 3135 us  =   67192 us
array layout transformations (mem->core):    121085 - 121025 us  =      60 us
shim layout transformations (shim->mem):     121025 - 70327 us   =   50698 us


theoretical max
64 [MAC/cycle] * 2 [MAC/OP] * 1e9 [GHz] * 1 [cores] = 128 * 1e9

theoretical min execution time:
2048*2048*2048*2/(128*1e9) * 1e6 = 134217 us

theoretical min execution time - preamble:
134217 + 3135 = 137352 us

achieved: 152543 us
(2048*2048*2048*2) [OP] / (152543 * 1e-6 [s]) =  112 * 1e9 [OP/s]
~ 88 %
util. without preamble: ~ 90%

-- whole array --

outer loop locks + zeroing + matmul: 11606 us
outer loop locks + zeroing:          TODO     
outer loop locks:   TODO


theoretical max
64 [MAC/cycle] * 2 [MAC/OP] * 1e9 [GHz] * 16 [cores] = 2048 * 1e9

achieved: 11606 us
(2048*2048*2048*2) [OP] / (11606 * 1e-6 [s]) = 1480 * 1e9 [OP/s]

1480/2048 = 72%


-- microcode --

function: matmul_i16_i16
6 instructions  - jump latency?
should be inlined!

function: _Z21matmul_vectorized_1x2IssLj16ELj16ELj16ELj4ELj4ELj4EEvPKT_S2_PT0_

microcode_0.lst: instructions that run once per function call
15 instr
+ 6 instructions for non-inlined call
total non-MAC: 15 [inst] + 6 [inst]                      = 21 [inst]

microcode_1.lst: instructions that run 4 times per call
16 instr (all non-MAC)
total:         16 [inst] * 4 [loop iter]                 = 64 [inst]
total non-MAC:                                           = 64 [inst]

microcode_2.lst: instructions that run 8 times per outer iteration, 4 * 8 per call
29 instr
of which are MACs: 16 instr
13 non-MAC instr
total:         29 [inst] * 8 [loop iter] * 4 [loop iter] = 928 [inst]
total non-MAC: 13 [inst] * 8 [loop iter] * 4 [loop iter] = 416 [inst]
total MAC:                                               = 512 [inst]

zero-overhead loop:  movx lc #14, meaning 14 iterations?
8 instr
of which are MACs: 8 instr
0 non-MAC instr
total:           8 [inst] * 14 [loop iter] * 8 [loop iter] * 4 [loop iter] = 3584 [inst]
total non-MAC:                                                             = 0    [inst]

grand total:
total inst:     4597 [inst]
total non-MAC:   501 [inst]
pre/postamble:    11%
